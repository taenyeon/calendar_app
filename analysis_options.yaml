# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  plugins:
    - custom_lint
  rules:
    - prefer_const_constructors
    - always_declare_return_types
#    - avoid_types_on_closure_parameters
    - avoid_annotating_with_dynamic
    - avoid_escaping_inner_quotes
    - avoid_function_literals_in_foreach_calls
    - avoid_private_typedef_functions
    - combinators_ordering
    - curly_braces_in_flow_control_structures
#    - omit_local_variable_types
    - annotate_overrides
    - sort_constructors_first
    - unawaited_futures
    - directives_ordering
    - unnecessary_final
    - unnecessary_parenthesis
    - conditional_uri_does_not_exist
    - prefer_single_quotes
    - await_only_futures
    - always_use_package_imports
    - avoid_empty_else
    - comment_references
    - prefer_void_to_null
    - use_key_in_widget_constructors

analyzer:
  exclude:
#    - lib/**.freezed.dart
#    - lib/**.g.dart
#    - lib/generated
#    - lib/firebase_options.dart
  errors:
    invalid_annotation_target: ignore
    todo: ignore